name: Event Producer Workflow

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    environment: STAGING
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run tests
        run: mvn test

  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write  # Allow write access to pull requests
      contents: read  # Allow read access to repository contents
      id-token: write  # Allow write access to the ID token
    environment: STAGING
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      #      - name: Build project
      #        run: mvn clean package -DskipTests

      #      - name: Build Docker image with commit SHA tag
      #        run: docker build -t ghoshdocker/event-producer:${{ github.sha }} -f EventProducerWeb/Dockerfile .
      #
      #      - name: Log in to Docker Hub
      #        uses: docker/login-action@v2
      #        with:
      #          username: ${{ secrets.DOCKER_USERNAME }}
      #          password: ${{ secrets.DOCKER_PASSWORD }}
      #
      #      - name: Push Docker image
      #        run: docker push ghoshdocker/event-producer:${{ github.sha }}

      - name: Comment on PR with Docker image tag
        #        uses: actions/github-script@v7
        #        with:
        #          github-token: ${{secrets.GITHUB_TOKEN}}
        #          script: |
        #            console.log(`The event name is ${context.issue.number}`)
        #            github.rest.issues.createComment({
        #              issue_number: context.issue.number,
        #              owner: context.repo.owner,
        #              repo: context.repo.repo,
        #              body: `Image tag: ghoshdocker/event-producer:${ github.sha }`
        #            })
        uses: actions/github-script@v7
        with:
          #          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log(`The event name is ${context.issue.number}`)
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Image tag=ghoshdocker/event-producer:${ github.sha }`
            })
